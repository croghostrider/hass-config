switch:
  - platform: template
    switches:
      television:
        friendly_name: Television
        value_template: '{{ not is_state("media_player.tv", "off") }}'
        entity_id: media_player.tv
        turn_on:
          - service: python_script.media_time
            data:
              source: tv
        turn_off:
          - service: python_script.turn_off_media

      cinema:
        friendly_name: Cinema
        value_template: '{{ is_state("switch.projector", "on") }}'
        entity_id: switch.projector
        turn_on:
          - service: python_script.media_time
            data:
              source: cinema
        turn_off:
          - service: python_script.turn_off_media

      receiver_output:
        friendly_name: Receiver Output
        value_template: '{{ is_state("input_boolean.receiver_hdmi1_enabled", "on") }}'
        entity_id: input_boolean.receiver_hdmi1_enabled
        turn_on:
          - service: media_player.yamaha_enable_output
            data:
              entity_id: media_player.receiver
              port: hdmi1
              enabled: true
          - service: media_player.yamaha_enable_output
            data:
              entity_id: media_player.receiver
              port: hdmi2
              enabled: false
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.receiver_hdmi1_enabled
        turn_off:
          - service: media_player.yamaha_enable_output
            data:
              entity_id: media_player.receiver
              port: hdmi1
              enabled: false
          - service: media_player.yamaha_enable_output
            data:
              entity_id: media_player.receiver
              port: hdmi2
              enabled: true
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.receiver_hdmi1_enabled
        icon_template: >-
          {% if is_state('input_boolean.receiver_hdmi1_enabled', 'on') %}
            mdi:television
          {% else %}
            mdi:projector
          {% endif %}

input_boolean:
  receiver_hdmi1_enabled:
    name: Receiver HDMI1 outut enabled
  cinema_lights_turned_off:
    name: If cinema_lights were turned off when starting cinema

script:
  tv_scene:
    alias: TV Scene
    sequence:
      - alias: Change to watch TV
        service: python_script.media_time
        data:
          source: tv
  cinema_scene:
    alias: Cinema Scene
    sequence:
      - alias: Change to watch cinema
        service: python_script.media_time
        data:
          source: cinema
  off_scene:
    alias: Media off
    sequence:
      - alias: Turn everything off
        service: python_script.turn_off_media

  tv_and_hdmi1:
    alias: Start TV and set HDMI1 to input
    sequence:
      - service: media_player.turn_on
        entity_id: media_player.tv
      - wait_template: "{{ is_state('media_player.tv', 'playing') }}"
        timeout: '00:00:10'
        continue_on_timeout: 'true'
      - service: media_player.select_source
        entity_id: media_player.tv
        data:
          source: HDMI1

automation:
  - alias: IR Volume Up
    trigger:
      platform: event
      event_type: ir_command_received
      event_data:
        button_name: KEY_VOLUMEUP
    action:
      service: media_player.volume_set
      entity_id: media_player.receiver
      data_template:
        volume_level: >
          {{ states.media_player.receiver.attributes.volume_level - 0.005 }}
  - alias: IR Volume Down
    trigger:
      platform: event
      event_type: ir_command_received
      event_data:
        button_name: KEY_VOLUMEDOWN
    action:
      service: media_player.volume_set
      entity_id: media_player.receiver
      data_template:
        volume_level: >
          {{ states.media_player.receiver.attributes.volume_level + 0.005 }}
