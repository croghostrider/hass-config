- id: '1'
  alias: Reset pierre_bedroom_run_today
  trigger:
    platform: time
    at: '08:00:00'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.pierre_bedroom_run_today

- id: '2'
  alias: Turn on bedroom lamp when someone enters the room
  trigger:
    platform: state
    entity_id: binary_sensor.bedroom_sensor
    from: 'off'
  condition:
    - condition: state
      entity_id: input_boolean.pierre_bedroom_run_today
      state: 'off'
    - condition: state
      entity_id: group.family
      state: home
    - condition: time
      after: '21:30:00'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.pierre_bedroom_run_today
    - service: switch.turn_on
      entity_id: switch.pierre_bedroom

- id: '3'
  alias: Turn on evening lights
  trigger:
    - platform: sun
      event: sunset
      offset: '00:15:00'
    - platform: sun
      event: sunrise
      offset: '01:00:00'
  action:
    service_template: >
      {% if trigger.event == 'sunset' %}
        switch.turn_on
      {% else %}
        switch.turn_off
      {% endif %}
    entity_id: ['switch.downstair_lights', 'switch.upstair_lights']

- id: '4'
  alias: Startup notification
  trigger:
    platform: homeassistant
    event: start
  action:
    service: notify.system
    data_template:
      message: 'Home Assistant has started (IP: {{ states.sensor.ipaddress.state }})'
      title: System Notification

- id: '5'
  alias: Notify for new devices
  trigger:
    platform: event
    event_type: device_tracker_new_device
  action:
    - service: notify.system
      data_template:
        message: >
          New device:
          {{trigger.event.data.host_name}}
          {{trigger.event.data.entity_id}}
        title: System Notification

- id: '6'
  alias: Process down
  trigger:
    platform: state
    entity_id:
      - sensor.process_mosquitto
  action:
    service: notify.system
    data_template:
      message: >
        {{ trigger.entity_id.split('.')[1] }} is {{ trigger.to_state.state.lower() }}
      title: System Notification

- id: '7'
  alias: Turn on engine pre-heater
  trigger:
    - platform: template
      value_template: "{{ states('sensor.time') == (states.input_datetime.engine_heater.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
  condition:
    - condition: state
      entity_id: input_boolean.engine_heater
      state: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.utomhus
    - service: switch.turn_on
      entity_id: switch.utomhus
    - service: switch.turn_on
      entity_id: switch.utomhus
    - service_template: >
        {% if is_state('input_select.engine_heater', 'Pierre') %}
          notify.ios_pierres_iphone
        {% elif is_state('input_select.engine_heater', 'Tove') %}
          notify.ios_toves_iphone
        {% else %}
          notify.all_people
        {% endif %}
      data:
        title: Engine Heater
        message: Turned ON engine heater!

- id: '8'
  alias: Automatic engine pre-heater turn off
  trigger:
    - platform: template
      value_template: >
        {% set start = states.input_datetime.engine_heater.attributes.timestamp | int %}
        {% set delay = states.input_number.engine_heater.state | int %}
        {{ states('sensor.time') == ((start + delay * 60) | timestamp_custom('%H:%M', False)) }}
  action:
    - service: switch.turn_off
      entity_id: switch.utomhus
